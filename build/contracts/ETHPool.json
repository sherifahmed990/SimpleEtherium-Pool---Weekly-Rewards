{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "addTeamMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositAndDestriputeRewards",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "removeTeamMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumBalance",
          "type": "uint256"
        }
      ],
      "name": "setMinBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDepositBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ETHPool.sol"
  },
  "ast": {
    "absolutePath": "contracts/ETHPool.sol",
    "exportedSymbols": {
      "ETHPool": [
        411
      ]
    },
    "id": 412,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ETHPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "56:136:0",
          "text": "@title ETHPool provides a service where people can deposit ETH and they will receive weekly rewards.\n @author Sherif Abdelmoatty"
        },
        "fullyImplemented": true,
        "id": 411,
        "linearizedBaseContracts": [
          411
        ],
        "name": "ETHPool",
        "nameLocation": "201:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 4,
            "mutability": "mutable",
            "name": "governance",
            "nameLocation": "229:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "214:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "214:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1eb903cf",
            "id": 8,
            "mutability": "mutable",
            "name": "depositBalances",
            "nameLocation": "282:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "247:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "247:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "lockedDepositBalances",
            "nameLocation": "331:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "303:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "303:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e8c0a0df",
            "id": 14,
            "mutability": "mutable",
            "name": "totalDepositBalance",
            "nameLocation": "373:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "358:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "totalLockedDepositBalances",
            "nameLocation": "406:26:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "398:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "24851914",
            "id": 20,
            "mutability": "mutable",
            "name": "isTeam",
            "nameLocation": "470:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "438:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "446:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "438:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 18,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "457:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 23,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "507:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "482:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "482:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "482:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b9d1d49b",
            "id": 25,
            "mutability": "mutable",
            "name": "minimumBalance",
            "nameLocation": "534:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "519:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "519:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "id": 31,
            "name": "Deposit",
            "nameLocation": "693:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "709:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "701:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "714:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:29:0"
            },
            "src": "687:43:0"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 37,
            "name": "Withdraw",
            "nameLocation": "741:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "758:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "750:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "771:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "763:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:29:0"
            },
            "src": "735:44:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "811:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "829:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "829:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 42,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "843:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "829:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 39,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "821:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "821:33:0"
                },
                {
                  "id": 46,
                  "nodeType": "PlaceholderStatement",
                  "src": "864:1:0"
                }
              ]
            },
            "id": 48,
            "name": "onlyGovernance",
            "nameLocation": "794:14:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:2:0"
            },
            "src": "785:87:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "898:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 51,
                          "name": "isTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "916:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 54,
                        "indexExpression": {
                          "expression": {
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "923:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "923:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "916:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "908:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "908:27:0"
                },
                {
                  "id": 57,
                  "nodeType": "PlaceholderStatement",
                  "src": "945:1:0"
                }
              ]
            },
            "id": 59,
            "name": "onlyTeam",
            "nameLocation": "887:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:0"
            },
            "src": "878:75:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "972:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "982:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 63,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "995:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "995:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "982:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "982:23:0"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:2:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:0"
            },
            "scope": 411,
            "src": "959:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1163:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76,
                        "name": "isTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1173:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "id": 77,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1180:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1173:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1190:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1173:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1173:21:0"
                }
              ]
            },
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "1018:80:0",
              "text": "@notice Add team member\n @param member The member address to be added"
            },
            "functionSelector": "3eb2b5ad",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 74,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73,
                  "name": "onlyGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "1149:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1149:14:0"
              }
            ],
            "name": "addTeamMember",
            "nameLocation": "1112:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "1134:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1126:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:16:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1163:0:0"
            },
            "scope": 411,
            "src": "1103:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1360:94:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 92,
                          "name": "isTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1378:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 94,
                        "indexExpression": {
                          "id": 93,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1385:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1378:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207465616d206d656d62657221",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1394:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2833c9f64fd2fce077c356a25baa8781c4a9cb13f89c9c047302ea10254a5708",
                          "typeString": "literal_string \"Not a team member!\""
                        },
                        "value": "Not a team member!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2833c9f64fd2fce077c356a25baa8781c4a9cb13f89c9c047302ea10254a5708",
                          "typeString": "literal_string \"Not a team member!\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:45:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 98,
                        "name": "isTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1425:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 100,
                      "indexExpression": {
                        "id": 99,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1432:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1425:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1442:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1425:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:22:0"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "1207:85:0",
              "text": "@notice Remove team member\n @param member The member address to be removed"
            },
            "functionSelector": "14eba026",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88,
                  "name": "onlyGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "1346:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1346:14:0"
              }
            ],
            "name": "removeTeamMember",
            "nameLocation": "1306:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "1331:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1323:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:16:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:0"
            },
            "scope": 411,
            "src": "1297:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1564:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "minimumBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1574:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_minimumBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1591:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1574:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:32:0"
                }
              ]
            },
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "1460:30:0",
              "text": "@notice Set minimumBalance"
            },
            "functionSelector": "c91d956c",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110,
                  "name": "onlyGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48,
                  "src": "1550:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1550:14:0"
              }
            ],
            "name": "setMinBalance",
            "nameLocation": "1504:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_minimumBalance",
                  "nameLocation": "1526:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1518:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:25:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:0"
            },
            "scope": 411,
            "src": "1495:118:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1682:529:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1700:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1700:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1712:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1700:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20457468657220746f206465706f73697421",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e8986124d94022368032250b7956c1e5d8f08667f0a22fc9cf568bf0e178a7",
                          "typeString": "literal_string \"No Ether to deposit!\""
                        },
                        "value": "No Ether to deposit!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e8986124d94022368032250b7956c1e5d8f08667f0a22fc9cf568bf0e178a7",
                          "typeString": "literal_string \"No Ether to deposit!\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1692:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1692:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 130,
                        "name": "depositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1760:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "expression": {
                          "id": 131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1776:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1776:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1760:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1791:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1760:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 155,
                  "nodeType": "IfStatement",
                  "src": "1757:250:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "1793:214:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 137,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1846:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1846:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 139,
                                "name": "minimumBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "1858:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1846:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4465706f73697420616d6f756e74206973206c657373207468617420746865206d696e696d756d20616c6c6f7765642e",
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1874:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0bbfcf34e957e6df143756bf85e6d6d2c0baf378bd16ee72f78446e730e23e41",
                                "typeString": "literal_string \"Deposit amount is less that the minimum allowed.\""
                              },
                              "value": "Deposit amount is less that the minimum allowed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0bbfcf34e957e6df143756bf85e6d6d2c0baf378bd16ee72f78446e730e23e41",
                                "typeString": "literal_string \"Deposit amount is less that the minimum allowed.\""
                              }
                            ],
                            "id": 136,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1838:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1838:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 143,
                        "nodeType": "ExpressionStatement",
                        "src": "1838:87:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 149,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1958:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1958:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1950:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 147,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1950:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1950:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 144,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1939:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1939:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                              "typeString": "function (address payable[] storage pointer,address payable)"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1939:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "1939:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 156,
                        "name": "depositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2016:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 159,
                      "indexExpression": {
                        "expression": {
                          "id": 157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2032:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2032:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2016:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 160,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2047:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2047:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2016:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:40:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "totalDepositBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2092:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2115:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2115:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2092:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2182:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2182:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2194:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2194:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 169,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2174:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "EmitStatement",
                  "src": "2169:35:0"
                }
              ]
            },
            "documentation": {
              "id": 119,
              "nodeType": "StructuredDocumentation",
              "src": "1619:25:0",
              "text": "@notice deposit ether"
            },
            "functionSelector": "d0e30db0",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1658:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:0"
            },
            "scope": 411,
            "src": "1649:562:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "2334:1136:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 184,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2352:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2361:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2352:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d75737420626520686967686572207468616e20302e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15926f3699fbffce87a85d9629d81830c4a66f1a1a59638035b99b7cb7f0d9f3",
                          "typeString": "literal_string \"Amount must be higher than 0.\""
                        },
                        "value": "Amount must be higher than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15926f3699fbffce87a85d9629d81830c4a66f1a1a59638035b99b7cb7f0d9f3",
                          "typeString": "literal_string \"Amount must be higher than 0.\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2344:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 191,
                            "name": "depositBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2414:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "expression": {
                              "id": 192,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2430:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2430:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2414:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 195,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2444:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2414:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073756666656369656e742066756e647320696e20757365722062616c616e63652e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2465:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86b259973a81ce8154c6df6843cfdc90087b3756ca83969446043caf409b3f1d",
                          "typeString": "literal_string \"No suffecient funds in user balance.\""
                        },
                        "value": "No suffecient funds in user balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86b259973a81ce8154c6df6843cfdc90087b3756ca83969446043caf409b3f1d",
                          "typeString": "literal_string \"No suffecient funds in user balance.\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2406:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:98:0"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 200,
                        "name": "depositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2515:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 203,
                      "indexExpression": {
                        "expression": {
                          "id": 201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2531:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2531:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 204,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2546:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2515:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:37:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 207,
                        "name": "depositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2738:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 210,
                      "indexExpression": {
                        "expression": {
                          "id": 208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2754:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2754:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2738:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 211,
                      "name": "minimumBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2768:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 228,
                  "nodeType": "IfStatement",
                  "src": "2735:155:0",
                  "trueBody": {
                    "id": 227,
                    "nodeType": "Block",
                    "src": "2783:107:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 213,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "2797:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 214,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2807:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "expression": {
                                "id": 215,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2823:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2823:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2807:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2797:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "2797:37:0"
                      },
                      {
                        "expression": {
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 220,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2848:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 223,
                            "indexExpression": {
                              "expression": {
                                "id": 221,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2864:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2864:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2848:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2878:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2848:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 226,
                        "nodeType": "ExpressionStatement",
                        "src": "2848:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 229,
                      "name": "totalDepositBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "2899:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2922:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2899:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:29:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 233,
                        "name": "lockedDepositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3020:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 236,
                      "indexExpression": {
                        "expression": {
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3042:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3042:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3020:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 237,
                        "name": "depositBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3056:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "expression": {
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3072:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3056:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3020:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "nodeType": "IfStatement",
                  "src": "3017:311:0",
                  "trueBody": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "3084:244:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 242,
                            "name": "totalLockedDepositBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3098:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 243,
                                "name": "lockedDepositBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "3128:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 246,
                              "indexExpression": {
                                "expression": {
                                  "id": 244,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3150:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3150:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3128:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 247,
                                "name": "depositBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "3213:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 250,
                              "indexExpression": {
                                "expression": {
                                  "id": 248,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3229:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3229:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3213:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3128:112:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:142:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:142:0"
                      },
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 254,
                              "name": "lockedDepositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3254:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "expression": {
                                "id": 255,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3276:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3276:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3254:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 258,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "3290:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 261,
                            "indexExpression": {
                              "expression": {
                                "id": 259,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3306:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3306:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3290:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3254:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "3254:63:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3375:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 268,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3354:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3354:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3346:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3346:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3346:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3346:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3346:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3444:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3444:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 278,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3456:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3435:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "EmitStatement",
                  "src": "3430:33:0"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "2217:64:0",
              "text": "@notice withdraw ether\n @param amount to be withdrawn"
            },
            "functionSelector": "2e1a7d4d",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2295:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2312:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2304:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2303:16:0"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2334:0:0"
            },
            "scope": 411,
            "src": "2286:1184:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "3801:1377:0",
              "statements": [
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "totalRewardsBalance",
                      "nameLocation": "3819:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3811:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3811:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 292,
                  "initialValue": {
                    "expression": {
                      "id": 290,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3841:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3841:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3811:39:0"
                },
                {
                  "assignments": [
                    294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "tlb",
                      "nameLocation": "3868:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3860:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 296,
                  "initialValue": {
                    "id": 295,
                    "name": "totalLockedDepositBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "3874:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3860:40:0"
                },
                {
                  "body": {
                    "id": 403,
                    "nodeType": "Block",
                    "src": "3950:1179:0",
                    "statements": [
                      {
                        "assignments": [
                          309
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 309,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "4015:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 403,
                            "src": "3999:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 308,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3999:15:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 313,
                        "initialValue": {
                          "baseExpression": {
                            "id": 310,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "4022:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 312,
                          "indexExpression": {
                            "id": 311,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4028:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4022:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3999:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 314,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "4047:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 316,
                            "indexExpression": {
                              "id": 315,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4063:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4047:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4072:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4047:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 351,
                        "nodeType": "IfStatement",
                        "src": "4044:326:0",
                        "trueBody": {
                          "id": 350,
                          "nodeType": "Block",
                          "src": "4074:296:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 319,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "4093:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    }
                                  },
                                  "id": 321,
                                  "indexExpression": {
                                    "id": 320,
                                    "name": "n",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 298,
                                    "src": "4099:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4093:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 322,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "4104:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    }
                                  },
                                  "id": 327,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 323,
                                        "name": "users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "4110:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                          "typeString": "address payable[] storage ref"
                                        }
                                      },
                                      "id": 324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "4110:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4123:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4110:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4104:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "4093:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 329,
                              "nodeType": "ExpressionStatement",
                              "src": "4093:32:0"
                            },
                            {
                              "expression": {
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "4143:28:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 330,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "4150:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    }
                                  },
                                  "id": 335,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 331,
                                        "name": "users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "4156:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                          "typeString": "address payable[] storage ref"
                                        }
                                      },
                                      "id": 332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "4156:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4169:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4156:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4150:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 337,
                              "nodeType": "ExpressionStatement",
                              "src": "4143:28:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 338,
                                  "name": "n",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "4220:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 339,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23,
                                      "src": "4225:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                        "typeString": "address payable[] storage ref"
                                      }
                                    },
                                    "id": 340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4225:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4238:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4225:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4220:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 348,
                              "nodeType": "IfStatement",
                              "src": "4217:116:0",
                              "trueBody": {
                                "id": 347,
                                "nodeType": "Block",
                                "src": "4240:93:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "--",
                                      "prefix": false,
                                      "src": "4311:3:0",
                                      "subExpression": {
                                        "id": 344,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 298,
                                        "src": "4311:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 346,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4311:3:0"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 349,
                              "nodeType": "Break",
                              "src": "4350:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          353
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 353,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "4391:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 403,
                            "src": "4383:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 352,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4383:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 354,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4383:14:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 355,
                            "name": "totalLockedDepositBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "4466:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4495:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4466:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 381,
                          "nodeType": "Block",
                          "src": "4656:292:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 370,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "4825:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 375,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 371,
                                            "name": "depositBalances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8,
                                            "src": "4835:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 373,
                                          "indexExpression": {
                                            "id": 372,
                                            "name": "user",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 309,
                                            "src": "4851:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4835:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 374,
                                          "name": "totalRewardsBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "4859:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4835:43:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 376,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4834:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 377,
                                    "name": "totalDepositBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "4913:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4834:98:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4825:107:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 380,
                              "nodeType": "ExpressionStatement",
                              "src": "4825:107:0"
                            }
                          ]
                        },
                        "id": 382,
                        "nodeType": "IfStatement",
                        "src": "4463:485:0",
                        "trueBody": {
                          "id": 369,
                          "nodeType": "Block",
                          "src": "4497:155:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 358,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "4516:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 363,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 359,
                                            "name": "lockedDepositBalances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "4526:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 361,
                                          "indexExpression": {
                                            "id": 360,
                                            "name": "user",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 309,
                                            "src": "4548:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4526:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 362,
                                          "name": "totalRewardsBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "4556:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4526:49:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 364,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4525:51:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 365,
                                    "name": "totalLockedDepositBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16,
                                    "src": "4610:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4525:111:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4516:120:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 368,
                              "nodeType": "ExpressionStatement",
                              "src": "4516:120:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 383,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "4974:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 385,
                            "indexExpression": {
                              "id": 384,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4990:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4974:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 386,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "4999:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4974:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "4974:31:0"
                      },
                      {
                        "expression": {
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 389,
                              "name": "lockedDepositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5019:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "id": 390,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "5041:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5019:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 392,
                              "name": "depositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "5049:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 394,
                            "indexExpression": {
                              "id": 393,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "5065:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5049:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5019:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "5019:51:0"
                      },
                      {
                        "expression": {
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 397,
                            "name": "tlb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5084:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 398,
                              "name": "lockedDepositBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5091:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 400,
                            "indexExpression": {
                              "id": 399,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "5113:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5091:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5084:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 402,
                        "nodeType": "ExpressionStatement",
                        "src": "5084:34:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 301,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3927:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 302,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "3931:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3931:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3927:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "initializationExpression": {
                    "assignments": [
                      298
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "3920:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "3915:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3915:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 300,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3924:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3915:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3945:3:0",
                      "subExpression": {
                        "id": 305,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3945:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 307,
                    "nodeType": "ExpressionStatement",
                    "src": "3945:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3910:1219:0"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 405,
                      "name": "totalLockedDepositBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5138:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 406,
                      "name": "tlb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "5167:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5138:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "5138:32:0"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "3476:258:0",
              "text": "@notice any team member can deposit rewards using this function\n @notice and it will distribute the rewards based on the locked balances\n @dev the looking period(weekly) depends on how often the team members calls\n @dev this function"
            },
            "functionSelector": "71a5f6d9",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 285,
                  "name": "onlyTeam",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "3793:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3793:8:0"
              }
            ],
            "name": "depositAndDestriputeRewards",
            "nameLocation": "3748:27:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3775:2:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3801:0:0"
            },
            "scope": 411,
            "src": "3739:1439:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 412,
        "src": "192:4989:0",
        "usedErrors": []
      }
    ],
    "src": "31:5150:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610a76806100326000396000f3fe6080604052600436106100a75760003560e01c80635aa6e675116100645780635aa6e675146101b957806371a5f6d9146101d9578063b9d1d49b146101e1578063c91d956c146101f7578063d0e30db014610217578063e8c0a0df1461021f57600080fd5b806314eba026146100ac5780631eb903cf146100ce578063248519141461010e5780632e1a7d4d1461014e578063365b98b2146101615780633eb2b5ad14610199575b600080fd5b3480156100b857600080fd5b506100cc6100c736600461092b565b610235565b005b3480156100da57600080fd5b506100fb6100e936600461092b565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561011a57600080fd5b5061013e61012936600461092b565b60056020526000908152604090205460ff1681565b6040519015158152602001610105565b6100cc61015c36600461095b565b6102cf565b34801561016d57600080fd5b5061018161017c36600461095b565b6104ef565b6040516001600160a01b039091168152602001610105565b3480156101a557600080fd5b506100cc6101b436600461092b565b610519565b3480156101c557600080fd5b50600054610181906001600160a01b031681565b6100cc610554565b3480156101ed57600080fd5b506100fb60075481565b34801561020357600080fd5b506100cc61021236600461095b565b61078e565b6100cc6107aa565b34801561022b57600080fd5b506100fb60035481565b6000546001600160a01b0316331461024c57600080fd5b6001600160a01b03811660009081526005602052604090205460ff166102ae5760405162461bcd60e51b81526020600482015260126024820152714e6f742061207465616d206d656d6265722160701b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000811161031f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d75737420626520686967686572207468616e20302e00000060448201526064016102a5565b3360009081526001602052604090205481106103895760405162461bcd60e51b8152602060048201526024808201527f4e6f2073756666656369656e742066756e647320696e20757365722062616c616044820152633731b29760e11b60648201526084016102a5565b33600090815260016020526040812080548392906103a890849061098a565b90915550506007543360009081526001602052604090205410156103f357336000908152600160205260409020546103e090826109a1565b3360009081526001602052604081205590505b8060036000828254610405919061098a565b90915550503360009081526001602090815260408083205460029092529091205411156104855733600090815260016020908152604080832054600290925290912054610452919061098a565b60046000828254610463919061098a565b9091555050336000908152600160209081526040808320546002909252909120555b604051339082156108fc029083906000818181858888f193505050501580156104b2573d6000803e3d6000fd5b5060408051338152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150565b600681815481106104ff57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461053057600080fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b3360009081526005602052604090205460ff1661057057600080fd5b600454349060005b60065481101561078757600060068281548110610597576105976109b9565b60009182526020808320909101546001600160a01b031680835260019091526040822054909250900361069b57600680546105d49060019061098a565b815481106105e4576105e46109b9565b600091825260209091200154600680546001600160a01b039092169184908110610610576106106109b9565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055600680546106499060019061098a565b81548110610659576106596109b9565b600091825260209091200180546001600160a01b03191690556006546106819060019061098a565b82146106955781610691816109cf565b9250505b50610787565b600454600090156106de576004546001600160a01b0383166000908152600260205260409020546106cd9087906109e6565b6106d79190610a05565b9050610712565b6003546001600160a01b0383166000908152600160205260409020546107059087906109e6565b61070f9190610a05565b90505b6001600160a01b0382166000908152600160205260408120805483929061073a9084906109a1565b90915550506001600160a01b038216600090815260016020908152604080832054600290925290912081905561077090856109a1565b93505050808061077f90610a27565b915050610578565b5060045550565b6000546001600160a01b031633146107a557600080fd5b600755565b600034116107f15760405162461bcd60e51b81526020600482015260146024820152734e6f20457468657220746f206465706f7369742160601b60448201526064016102a5565b3360009081526001602052604081205490036108b45760075434116108715760405162461bcd60e51b815260206004820152603060248201527f4465706f73697420616d6f756e74206973206c6573732074686174207468652060448201526f36b4b734b6bab69030b63637bbb2b21760811b60648201526084016102a5565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b33600090815260016020526040812080543492906108d39084906109a1565b9250508190555034600360008282546108ec91906109a1565b9091555050604080513381523460208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a1565b60006020828403121561093d57600080fd5b81356001600160a01b038116811461095457600080fd5b9392505050565b60006020828403121561096d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561099c5761099c610974565b500390565b600082198211156109b4576109b4610974565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816109de576109de610974565b506000190190565b6000816000190483118215151615610a0057610a00610974565b500290565b600082610a2257634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610a3957610a39610974565b506001019056fea2646970667358221220e193011d239a9ed34743d67f1c1f231a58a777a2741a2820429ef383237de3c064736f6c634300080d0033",
  "bytecodeSha1": "8117a7f83d9cd2518bd24e5b9542d5fc9c481b32",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ETHPool",
  "coverageMap": {
    "branches": {
      "0": {
        "ETHPool.deposit": {
          "40": [
            1700,
            1713,
            true
          ],
          "41": [
            1760,
            1792,
            false
          ],
          "42": [
            1846,
            1872,
            true
          ]
        },
        "ETHPool.depositAndDestriputeRewards": {
          "36": [
            916,
            934,
            true
          ],
          "37": [
            4047,
            4073,
            false
          ],
          "38": [
            4220,
            4239,
            false
          ],
          "39": [
            4466,
            4496,
            false
          ]
        },
        "ETHPool.removeTeamMember": {
          "31": [
            1378,
            1392,
            true
          ]
        },
        "ETHPool.withdraw": {
          "32": [
            2352,
            2362,
            true
          ],
          "33": [
            2414,
            2450,
            true
          ],
          "34": [
            2738,
            2782,
            false
          ],
          "35": [
            3020,
            3083,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ETHPool.addTeamMember": {
          "12": [
            1173,
            1194
          ]
        },
        "ETHPool.deposit": {
          "25": [
            1692,
            1738
          ],
          "26": [
            1838,
            1925
          ],
          "27": [
            1939,
            1970
          ],
          "28": [
            2016,
            2056
          ],
          "29": [
            2092,
            2124
          ],
          "30": [
            2169,
            2204
          ]
        },
        "ETHPool.depositAndDestriputeRewards": {
          "13": [
            4093,
            4125
          ],
          "14": [
            4143,
            4171
          ],
          "15": [
            4311,
            4314
          ],
          "16": [
            4350,
            4355
          ],
          "17": [
            4516,
            4636
          ],
          "18": [
            4825,
            4932
          ],
          "19": [
            4974,
            5005
          ],
          "20": [
            5019,
            5070
          ],
          "21": [
            5084,
            5118
          ],
          "22": [
            3945,
            3948
          ],
          "23": [
            5138,
            5170
          ]
        },
        "ETHPool.removeTeamMember": {
          "0": [
            1370,
            1415
          ],
          "1": [
            1425,
            1447
          ]
        },
        "ETHPool.setMinBalance": {
          "24": [
            1574,
            1606
          ]
        },
        "ETHPool.withdraw": {
          "2": [
            2344,
            2396
          ],
          "3": [
            2406,
            2504
          ],
          "4": [
            2515,
            2552
          ],
          "5": [
            2797,
            2834
          ],
          "6": [
            2848,
            2879
          ],
          "7": [
            2899,
            2928
          ],
          "8": [
            3098,
            3240
          ],
          "9": [
            3254,
            3317
          ],
          "10": [
            3346,
            3382
          ],
          "11": [
            3430,
            3463
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100a75760003560e01c80635aa6e675116100645780635aa6e675146101b957806371a5f6d9146101d9578063b9d1d49b146101e1578063c91d956c146101f7578063d0e30db014610217578063e8c0a0df1461021f57600080fd5b806314eba026146100ac5780631eb903cf146100ce578063248519141461010e5780632e1a7d4d1461014e578063365b98b2146101615780633eb2b5ad14610199575b600080fd5b3480156100b857600080fd5b506100cc6100c736600461092b565b610235565b005b3480156100da57600080fd5b506100fb6100e936600461092b565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561011a57600080fd5b5061013e61012936600461092b565b60056020526000908152604090205460ff1681565b6040519015158152602001610105565b6100cc61015c36600461095b565b6102cf565b34801561016d57600080fd5b5061018161017c36600461095b565b6104ef565b6040516001600160a01b039091168152602001610105565b3480156101a557600080fd5b506100cc6101b436600461092b565b610519565b3480156101c557600080fd5b50600054610181906001600160a01b031681565b6100cc610554565b3480156101ed57600080fd5b506100fb60075481565b34801561020357600080fd5b506100cc61021236600461095b565b61078e565b6100cc6107aa565b34801561022b57600080fd5b506100fb60035481565b6000546001600160a01b0316331461024c57600080fd5b6001600160a01b03811660009081526005602052604090205460ff166102ae5760405162461bcd60e51b81526020600482015260126024820152714e6f742061207465616d206d656d6265722160701b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000811161031f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d75737420626520686967686572207468616e20302e00000060448201526064016102a5565b3360009081526001602052604090205481106103895760405162461bcd60e51b8152602060048201526024808201527f4e6f2073756666656369656e742066756e647320696e20757365722062616c616044820152633731b29760e11b60648201526084016102a5565b33600090815260016020526040812080548392906103a890849061098a565b90915550506007543360009081526001602052604090205410156103f357336000908152600160205260409020546103e090826109a1565b3360009081526001602052604081205590505b8060036000828254610405919061098a565b90915550503360009081526001602090815260408083205460029092529091205411156104855733600090815260016020908152604080832054600290925290912054610452919061098a565b60046000828254610463919061098a565b9091555050336000908152600160209081526040808320546002909252909120555b604051339082156108fc029083906000818181858888f193505050501580156104b2573d6000803e3d6000fd5b5060408051338152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150565b600681815481106104ff57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461053057600080fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b3360009081526005602052604090205460ff1661057057600080fd5b600454349060005b60065481101561078757600060068281548110610597576105976109b9565b60009182526020808320909101546001600160a01b031680835260019091526040822054909250900361069b57600680546105d49060019061098a565b815481106105e4576105e46109b9565b600091825260209091200154600680546001600160a01b039092169184908110610610576106106109b9565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055600680546106499060019061098a565b81548110610659576106596109b9565b600091825260209091200180546001600160a01b03191690556006546106819060019061098a565b82146106955781610691816109cf565b9250505b50610787565b600454600090156106de576004546001600160a01b0383166000908152600260205260409020546106cd9087906109e6565b6106d79190610a05565b9050610712565b6003546001600160a01b0383166000908152600160205260409020546107059087906109e6565b61070f9190610a05565b90505b6001600160a01b0382166000908152600160205260408120805483929061073a9084906109a1565b90915550506001600160a01b038216600090815260016020908152604080832054600290925290912081905561077090856109a1565b93505050808061077f90610a27565b915050610578565b5060045550565b6000546001600160a01b031633146107a557600080fd5b600755565b600034116107f15760405162461bcd60e51b81526020600482015260146024820152734e6f20457468657220746f206465706f7369742160601b60448201526064016102a5565b3360009081526001602052604081205490036108b45760075434116108715760405162461bcd60e51b815260206004820152603060248201527f4465706f73697420616d6f756e74206973206c6573732074686174207468652060448201526f36b4b734b6bab69030b63637bbb2b21760811b60648201526084016102a5565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b33600090815260016020526040812080543492906108d39084906109a1565b9250508190555034600360008282546108ec91906109a1565b9091555050604080513381523460208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a1565b60006020828403121561093d57600080fd5b81356001600160a01b038116811461095457600080fd5b9392505050565b60006020828403121561096d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561099c5761099c610974565b500390565b600082198211156109b4576109b4610974565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816109de576109de610974565b506000190190565b6000816000190483118215151615610a0057610a00610974565b500290565b600082610a2257634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610a3957610a39610974565b506001019056fea2646970667358221220e193011d239a9ed34743d67f1c1f231a58a777a2741a2820429ef383237de3c064736f6c634300080d0033",
  "deployedSourceMap": "192:4989:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:157;;;;;;;;;;-1:-1:-1;1297:157:0;;;;;:::i;:::-;;:::i;:::-;;247:50;;;;;;;;;;-1:-1:-1;247:50:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:1;;;439:2;424:18;247:50:0;;;;;;;;438:38;;;;;;;;;;-1:-1:-1;438:38:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;652:14:1;;645:22;627:41;;615:2;600:18;438:38:0;487:187:1;2286:1184:0;;;;;;:::i;:::-;;:::i;482:30::-;;;;;;;;;;-1:-1:-1;482:30:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1044:32:1;;;1026:51;;1014:2;999:18;482:30:0;864:219:1;1103:98:0;;;;;;;;;;-1:-1:-1;1103:98:0;;;;;:::i;:::-;;:::i;214:25::-;;;;;;;;;;-1:-1:-1;214:25:0;;;;-1:-1:-1;;;;;214:25:0;;;3739:1439;;;:::i;519:29::-;;;;;;;;;;;;;;;;1495:118;;;;;;;;;;-1:-1:-1;1495:118:0;;;;;:::i;:::-;;:::i;1649:562::-;;;:::i;358:34::-;;;;;;;;;;;;;;;;1297:157;843:10;;-1:-1:-1;;;;;843:10:0;829;:24;821:33;;;;;;-1:-1:-1;;;;;1378:14:0;::::1;;::::0;;;:6:::1;:14;::::0;;;;;::::1;;1370:45;;;::::0;-1:-1:-1;;;1370:45:0;;1498:2:1;1370:45:0::1;::::0;::::1;1480:21:1::0;1537:2;1517:18;;;1510:30;-1:-1:-1;;;1556:18:1;;;1549:48;1614:18;;1370:45:0::1;;;;;;;;;-1:-1:-1::0;;;;;1425:14:0::1;1442:5;1425:14:::0;;;:6:::1;:14;::::0;;;;:22;;-1:-1:-1;;1425:22:0::1;::::0;;1297:157::o;2286:1184::-;2361:1;2352:6;:10;2344:52;;;;-1:-1:-1;;;2344:52:0;;1845:2:1;2344:52:0;;;1827:21:1;1884:2;1864:18;;;1857:30;1923:31;1903:18;;;1896:59;1972:18;;2344:52:0;1643:353:1;2344:52:0;2430:10;2414:27;;;;:15;:27;;;;;;:36;-1:-1:-1;2406:98:0;;;;-1:-1:-1;;;2406:98:0;;2203:2:1;2406:98:0;;;2185:21:1;2242:2;2222:18;;;2215:30;2281:34;2261:18;;;2254:62;-1:-1:-1;;;2332:18:1;;;2325:34;2376:19;;2406:98:0;2001:400:1;2406:98:0;2531:10;2515:27;;;;:15;:27;;;;;:37;;2546:6;;2515:27;:37;;2546:6;;2515:37;:::i;:::-;;;;-1:-1:-1;;2768:14:0;;2754:10;2738:27;;;;:15;:27;;;;;;:44;2735:155;;;2823:10;2807:27;;;;:15;:27;;;;;;2797:37;;;;:::i;:::-;2864:10;2878:1;2848:27;;;:15;:27;;;;;:31;2797:37;-1:-1:-1;2735:155:0;2922:6;2899:19;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;3072:10:0;3056:27;;;;:15;:27;;;;;;;;;3020:21;:33;;;;;;;:63;3017:311;;;3229:10;3213:27;;;;:15;:27;;;;;;;;;3128:21;:33;;;;;;;:112;;3213:27;3128:112;:::i;:::-;3098:26;;:142;;;;;;;:::i;:::-;;;;-1:-1:-1;;3306:10:0;3290:27;;;;:15;:27;;;;;;;;;3254:21;:33;;;;;;:63;3017:311;3346:36;;3354:10;;3346:36;;;;;3375:6;;3346:36;;;;3375:6;3354:10;3346:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3435:28:0;;;3444:10;2975:51:1;;3057:2;3042:18;;3035:34;;;3435:28:0;;2948:18:1;3435:28:0;;;;;;;2286:1184;:::o;482:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;482:30:0;;-1:-1:-1;482:30:0;:::o;1103:98::-;843:10;;-1:-1:-1;;;;;843:10:0;829;:24;821:33;;;;;;-1:-1:-1;;;;;1173:14:0::1;;::::0;;;:6:::1;:14;::::0;;;;:21;;-1:-1:-1;;1173:21:0::1;1190:4;1173:21;::::0;;1103:98::o;3739:1439::-;923:10;916:18;;;;:6;:18;;;;;;;;908:27;;;;;;3874:26:::1;::::0;3841:9:::1;::::0;3811:27:::1;3910:1219;3931:5;:12:::0;3927:16;::::1;3910:1219;;;3999:20;4022:5;4028:1;4022:8;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;4022:8:0::1;4047:21:::0;;;4022:8;4047:21;;;;;;;4022:8;;-1:-1:-1;4047:26:0;;4044:326:::1;;4104:5;4110:12:::0;;:14:::1;::::0;4123:1:::1;::::0;4110:14:::1;:::i;:::-;4104:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;4093:5:::1;:8:::0;;-1:-1:-1;;;;;4104:21:0;;::::1;::::0;4099:1;;4093:8;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:32:::0;;-1:-1:-1;;;;;;4093:32:0::1;-1:-1:-1::0;;;;;4093:32:0;;;::::1;::::0;;;::::1;::::0;;4150:5:::1;4156:12:::0;;:14:::1;::::0;-1:-1:-1;;4156:14:0::1;:::i;:::-;4150:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;4143:28:::0;;-1:-1:-1;;;;;;4143:28:0::1;::::0;;4225:5:::1;:12:::0;:14:::1;::::0;4143:28;;4225:14:::1;:::i;:::-;4220:1;:19;4217:116;;4311:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4217:116;4350:5;;;4044:326;4466:26;::::0;4383:14:::1;::::0;4466:30;4463:485:::1;;4610:26;::::0;-1:-1:-1;;;;;4526:27:0;::::1;;::::0;;;:21:::1;:27;::::0;;;;;:49:::1;::::0;4556:19;;4526:49:::1;:::i;:::-;4525:111;;;;:::i;:::-;4516:120;;4463:485;;;4913:19;::::0;-1:-1:-1;;;;;4835:21:0;::::1;;::::0;;;:15:::1;:21;::::0;;;;;:43:::1;::::0;4859:19;;4835:43:::1;:::i;:::-;4834:98;;;;:::i;:::-;4825:107;;4463:485;-1:-1:-1::0;;;;;4974:21:0;::::1;;::::0;;;:15:::1;:21;::::0;;;;:31;;4999:6;;4974:21;:31:::1;::::0;4999:6;;4974:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5049:21:0;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;;5019::::1;:27:::0;;;;;;:51;;;5084:34:::1;::::0;;::::1;:::i;:::-;;;3950:1179;;3945:3;;;;;:::i;:::-;;;;3910:1219;;;-1:-1:-1::0;5138:26:0::1;:32:::0;-1:-1:-1;3739:1439:0:o;1495:118::-;843:10;;-1:-1:-1;;;;;843:10:0;829;:24;821:33;;;;;;1574:14:::1;:32:::0;1495:118::o;1649:562::-;1712:1;1700:9;:13;1692:46;;;;-1:-1:-1;;;1692:46:0;;4090:2:1;1692:46:0;;;4072:21:1;4129:2;4109:18;;;4102:30;-1:-1:-1;;;4148:18:1;;;4141:50;4208:18;;1692:46:0;3888:344:1;1692:46:0;1776:10;1760:27;;;;:15;:27;;;;;;:32;;1757:250;;1858:14;;1846:9;:26;1838:87;;;;-1:-1:-1;;;1838:87:0;;4439:2:1;1838:87:0;;;4421:21:1;4478:2;4458:18;;;4451:30;4517:34;4497:18;;;4490:62;-1:-1:-1;;;4568:18:1;;;4561:46;4624:19;;1838:87:0;4237:412:1;1838:87:0;1939:5;:31;;;;;;;-1:-1:-1;1939:31:0;;;;;;;;-1:-1:-1;;;;;;1939:31:0;1958:10;1939:31;;;1757:250;2032:10;2016:27;;;;:15;:27;;;;;:40;;2047:9;;2016:27;:40;;2047:9;;2016:40;:::i;:::-;;;;;;;;2115:9;2092:19;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;2174:30:0;;;2182:10;2975:51:1;;2194:9:0;3057:2:1;3042:18;;3035:34;2174:30:0;;2948:18:1;2174:30:0;;;;;;;1649:562::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o;679:180::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:1;;679:180;-1:-1:-1;679:180:1:o;2406:127::-;2467:10;2462:3;2458:20;2455:1;2448:31;2498:4;2495:1;2488:15;2522:4;2519:1;2512:15;2538:125;2578:4;2606:1;2603;2600:8;2597:34;;;2611:18;;:::i;:::-;-1:-1:-1;2648:9:1;;2538:125::o;2668:128::-;2708:3;2739:1;2735:6;2732:1;2729:13;2726:39;;;2745:18;;:::i;:::-;-1:-1:-1;2781:9:1;;2668:128::o;3080:127::-;3141:10;3136:3;3132:20;3129:1;3122:31;3172:4;3169:1;3162:15;3196:4;3193:1;3186:15;3212:136;3251:3;3279:5;3269:39;;3288:18;;:::i;:::-;-1:-1:-1;;;3324:18:1;;3212:136::o;3353:168::-;3393:7;3459:1;3455;3451:6;3447:14;3444:1;3441:21;3436:1;3429:9;3422:17;3418:45;3415:71;;;3466:18;;:::i;:::-;-1:-1:-1;3506:9:1;;3353:168::o;3526:217::-;3566:1;3592;3582:132;;3636:10;3631:3;3627:20;3624:1;3617:31;3671:4;3668:1;3661:15;3699:4;3696:1;3689:15;3582:132;-1:-1:-1;3728:9:1;;3526:217::o;3748:135::-;3787:3;3808:17;;;3805:43;;3828:18;;:::i;:::-;-1:-1:-1;3875:1:1;3864:13;;3748:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "Sherif Abdelmoatty",
    "kind": "dev",
    "methods": {
      "addTeamMember(address)": {
        "notice": "Add team member",
        "params": {
          "member": "The member address to be added"
        }
      },
      "deposit()": {
        "notice": "deposit ether"
      },
      "depositAndDestriputeRewards()": {
        "details": "the looking period(weekly) depends on how often the team members callsthis function",
        "notice": "any team member can deposit rewards using this functionand it will distribute the rewards based on the locked balances"
      },
      "removeTeamMember(address)": {
        "notice": "Remove team member",
        "params": {
          "member": "The member address to be removed"
        }
      },
      "setMinBalance(uint256)": {
        "notice": "Set minimumBalance"
      },
      "withdraw(uint256)": {
        "notice": "withdraw ether",
        "params": {
          "amount": "to be withdrawn"
        }
      }
    },
    "title": "ETHPool provides a service where people can deposit ETH and they will receive weekly rewards.",
    "version": 1
  },
  "offset": [
    192,
    5181
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AA6E675 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x71A5F6D9 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xB9D1D49B EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC91D956C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xE8C0A0DF EQ PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EBA026 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x1EB903CF EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x24851914 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x3EB2B5AD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x105 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x105 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x181 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x554 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH2 0xCC PUSH2 0x7AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F742061207465616D206D656D62657221 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520686967686572207468616E20302E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F2073756666656369656E742066756E647320696E20757365722062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3731B297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3A8 SWAP1 DUP5 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x3F3 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3E0 SWAP1 DUP3 PUSH2 0x9A1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE SWAP1 POP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD GT ISZERO PUSH2 0x485 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x597 JUMPI PUSH2 0x597 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 SUB PUSH2 0x69B JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x98A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x5E4 JUMPI PUSH2 0x5E4 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x610 JUMPI PUSH2 0x610 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x98A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x681 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x98A JUMP JUMPDEST DUP3 EQ PUSH2 0x695 JUMPI DUP2 PUSH2 0x691 DUP2 PUSH2 0x9CF JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP PUSH2 0x787 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DE JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6CD SWAP1 DUP8 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP PUSH2 0x712 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x705 SWAP1 DUP8 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x70F SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x73A SWAP1 DUP5 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x770 SWAP1 DUP6 PUSH2 0x9A1 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x77F SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F20457468657220746F206465706F73697421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x8B4 JUMPI PUSH1 0x7 SLOAD CALLVALUE GT PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206973206C65737320746861742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x36B4B734B6BAB69030B63637BBB2B217 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x8D3 SWAP1 DUP5 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99C PUSH2 0x974 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B4 PUSH2 0x974 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x9DE JUMPI PUSH2 0x9DE PUSH2 0x974 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA00 JUMPI PUSH2 0xA00 PUSH2 0x974 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA39 JUMPI PUSH2 0xA39 PUSH2 0x974 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SWAP4 ADD SAR 0x23 SWAP11 SWAP15 0xD3 SELFBALANCE NUMBER 0xD6 PUSH32 0x1C1F231A58A777A2741A2820429EF383237DE3C064736F6C634300080D003300 ",
  "pcMap": {
    "0": {
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "12": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AA6E675"
    },
    "25": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AA6E675"
    },
    "36": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "40": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x71A5F6D9"
    },
    "47": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "51": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB9D1D49B"
    },
    "58": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "62": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC91D956C"
    },
    "69": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "73": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0E30DB0"
    },
    "80": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "84": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8C0A0DF"
    },
    "91": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "95": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "REVERT",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x14EBA026"
    },
    "107": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "111": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1EB903CF"
    },
    "118": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "122": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x24851914"
    },
    "129": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E"
    },
    "133": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E1A7D4D"
    },
    "140": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "144": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x365B98B2"
    },
    "151": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161"
    },
    "155": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3EB2B5AD"
    },
    "162": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "166": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "170": {
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "171": {
      "first_revert": true,
      "fn": null,
      "offset": [
        192,
        5181
      ],
      "op": "REVERT",
      "path": "0"
    },
    "172": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "174": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "176": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "179": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "182": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "183": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "REVERT",
      "path": "0"
    },
    "184": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "189": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7"
    },
    "192": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "193": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "195": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "198": {
      "fn": "ETHPool.removeTeamMember",
      "jump": "i",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "199": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "200": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "203": {
      "fn": "ETHPool.removeTeamMember",
      "jump": "i",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "204": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "STOP",
      "path": "0"
    },
    "206": {
      "offset": [
        247,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "208": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "209": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "210": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "213": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "214": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "216": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "REVERT",
      "path": "0"
    },
    "218": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "op": "POP"
    },
    "220": {
      "offset": [
        247,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "223": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "226": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "227": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "229": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "232": {
      "fn": "ETHPool.removeTeamMember",
      "jump": "i",
      "offset": [
        247,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "236": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "238": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "239": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "241": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "242": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "243": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "244": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "247": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "248": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "249": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "250": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "251": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "254": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "op": "SWAP1"
    },
    "256": {
      "op": "DUP2"
    },
    "257": {
      "op": "MSTORE"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "offset": [
        247,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "264": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "265": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "267": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SUB",
      "path": "0"
    },
    "268": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        247,
        297
      ],
      "op": "RETURN",
      "path": "0"
    },
    "270": {
      "offset": [
        438,
        476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "271": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "272": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "DUP1",
      "path": "0"
    },
    "273": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "274": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "277": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "280": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "DUP1",
      "path": "0"
    },
    "281": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "REVERT",
      "path": "0"
    },
    "282": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "offset": [
        438,
        476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "287": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "290": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "293": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "296": {
      "fn": "ETHPool.removeTeamMember",
      "jump": "i",
      "offset": [
        438,
        476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "300": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "302": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "303": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "305": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "306": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "307": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "308": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "310": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "311": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "312": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "313": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "315": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "AND",
      "path": "0"
    },
    "316": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "317": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "JUMP",
      "path": "0"
    },
    "318": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "321": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        438,
        476
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "322": {
      "op": "SWAP1"
    },
    "323": {
      "op": "ISZERO"
    },
    "324": {
      "op": "ISZERO"
    },
    "325": {
      "op": "DUP2"
    },
    "326": {
      "op": "MSTORE"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "offset": [
        438,
        476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "333": {
      "op": "JUMP"
    },
    "334": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "338": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "341": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "342": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "344": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95B"
    },
    "347": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "348": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF"
    },
    "352": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "353": {
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "354": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "355": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "356": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "357": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "360": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "361": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "363": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "REVERT",
      "path": "0"
    },
    "365": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "op": "POP"
    },
    "367": {
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "370": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C"
    },
    "373": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "374": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "376": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95B"
    },
    "379": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        482,
        512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "380": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "381": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "384": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        482,
        512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "385": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "386": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "388": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "op": "SUB"
    },
    "397": {
      "op": "SWAP1"
    },
    "398": {
      "op": "SWAP2"
    },
    "399": {
      "op": "AND"
    },
    "400": {
      "op": "DUP2"
    },
    "401": {
      "op": "MSTORE"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "404": {
      "op": "ADD"
    },
    "405": {
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "408": {
      "op": "JUMP"
    },
    "409": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "410": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "411": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "412": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "413": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5"
    },
    "416": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "417": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "420": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "REVERT",
      "path": "0"
    },
    "421": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "426": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "429": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "430": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "432": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92B"
    },
    "435": {
      "fn": "ETHPool.addTeamMember",
      "jump": "i",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "437": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "440": {
      "fn": "ETHPool.addTeamMember",
      "jump": "i",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "offset": [
        214,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "443": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "445": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "448": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "449": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "451": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "REVERT",
      "path": "0"
    },
    "453": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "op": "POP"
    },
    "455": {
      "offset": [
        214,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "457": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "458": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "461": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "offset": [
        214,
        239
      ],
      "op": "AND",
      "path": "0"
    },
    "471": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "472": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        214,
        239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3739,
        5178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3739,
        5178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "477": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3739,
        5178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x554"
    },
    "480": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        3739,
        5178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "481": {
      "offset": [
        519,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "483": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "DUP1",
      "path": "0"
    },
    "484": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "485": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED"
    },
    "488": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "489": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "491": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "REVERT",
      "path": "0"
    },
    "493": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "494": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "POP",
      "path": "0"
    },
    "495": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "498": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "500": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "501": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "502": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        519,
        548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "503": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "504": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "505": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "506": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "507": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203"
    },
    "510": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "513": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "514": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "REVERT",
      "path": "0"
    },
    "515": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "516": {
      "op": "POP"
    },
    "517": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "520": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "523": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "524": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "526": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95B"
    },
    "529": {
      "fn": "ETHPool.setMinBalance",
      "jump": "i",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "530": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "534": {
      "fn": "ETHPool.setMinBalance",
      "jump": "i",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "535": {
      "fn": "ETHPool.deposit",
      "offset": [
        1649,
        2211
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "fn": "ETHPool.deposit",
      "offset": [
        1649,
        2211
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "539": {
      "fn": "ETHPool.deposit",
      "offset": [
        1649,
        2211
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AA"
    },
    "542": {
      "fn": "ETHPool.deposit",
      "jump": "i",
      "offset": [
        1649,
        2211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "543": {
      "offset": [
        358,
        392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "545": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "546": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "547": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "550": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "551": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "553": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "554": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "REVERT",
      "path": "0"
    },
    "555": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "POP",
      "path": "0"
    },
    "557": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "560": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "562": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "563": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "ETHPool.deposit",
      "offset": [
        358,
        392
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "offset": [
        843,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "568": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        843,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "offset": [
        843,
        853
      ],
      "op": "AND",
      "path": "0"
    },
    "578": {
      "offset": [
        829,
        839
      ],
      "op": "CALLER",
      "path": "0"
    },
    "579": {
      "offset": [
        829,
        853
      ],
      "op": "EQ",
      "path": "0"
    },
    "580": {
      "offset": [
        821,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C"
    },
    "583": {
      "offset": [
        821,
        854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "584": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "586": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "587": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "REVERT",
      "path": "0"
    },
    "588": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 0
    },
    "598": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "AND",
      "path": "0"
    },
    "599": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "601": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "602": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "DUP2",
      "path": "0"
    },
    "603": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "604": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "606": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "608": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "609": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "611": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "612": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "613": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "614": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "616": {
      "branch": 31,
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1378,
        1392
      ],
      "op": "AND",
      "path": "0"
    },
    "617": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "620": {
      "branch": 31,
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "621": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "623": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "632": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "635": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "637": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "DUP3",
      "path": "0"
    },
    "638": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "ADD",
      "path": "0"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "644": {
      "op": "DUP3"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH18",
      "value": "0x4E6F742061207465616D206D656D62657221"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "671": {
      "op": "DUP3"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "op": "MSTORE"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "678": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "680": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "681": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "683": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "SUB",
      "path": "0"
    },
    "684": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "685": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "686": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1370,
        1415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "696": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1442,
        1447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "699": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "700": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "701": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "703": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "705": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "706": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "708": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "709": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1439
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "710": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1447
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1447
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1447
      ],
      "op": "AND",
      "path": "0"
    },
    "716": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1447
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "717": {
      "fn": "ETHPool.removeTeamMember",
      "offset": [
        1425,
        1447
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "718": {
      "fn": "ETHPool.removeTeamMember",
      "jump": "o",
      "offset": [
        1297,
        1454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "719": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "720": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2361,
        2362
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "722": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2352,
        2358
      ],
      "op": "DUP2",
      "path": "0"
    },
    "723": {
      "branch": 32,
      "fn": "ETHPool.withdraw",
      "offset": [
        2352,
        2362
      ],
      "op": "GT",
      "path": "0"
    },
    "724": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "727": {
      "branch": 32,
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "728": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "730": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "742": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "744": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "DUP3",
      "path": "0"
    },
    "745": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "ADD",
      "path": "0"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "751": {
      "op": "DUP3"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D75737420626520686967686572207468616E20302E000000"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "789": {
      "op": "DUP3"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "798": {
      "op": "JUMP"
    },
    "799": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2344,
        2396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "800": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2430,
        2440
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 3
    },
    "801": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "803": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "805": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "806": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "808": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "810": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "813": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "815": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2441
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "816": {
      "branch": 33,
      "fn": "ETHPool.withdraw",
      "offset": [
        2414,
        2450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "817": {
      "op": "LT"
    },
    "818": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "821": {
      "branch": 33,
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "822": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "824": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "836": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "838": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "DUP3",
      "path": "0"
    },
    "839": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "ADD",
      "path": "0"
    },
    "840": {
      "op": "MSTORE"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "op": "DUP3"
    },
    "845": {
      "op": "ADD"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "PUSH32",
      "value": "0x4E6F2073756666656369656E742066756E647320696E20757365722062616C61"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "882": {
      "op": "DUP3"
    },
    "883": {
      "op": "ADD"
    },
    "884": {
      "op": "MSTORE"
    },
    "885": {
      "op": "PUSH4",
      "value": "0x3731B297"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "904": {
      "op": "JUMP"
    },
    "905": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2406,
        2504
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2531,
        2541
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "907": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "909": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "910": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "911": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "912": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "914": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "916": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "917": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "919": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "921": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "922": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "923": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2546,
        2552
      ],
      "op": "DUP4",
      "path": "0"
    },
    "924": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2546,
        2552
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "925": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "926": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "929": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "930": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2546,
        2552
      ],
      "op": "DUP5",
      "path": "0"
    },
    "931": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2546,
        2552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "932": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "935": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        2515,
        2552
      ],
      "op": "JUMP",
      "path": "0"
    },
    "936": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "938": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "939": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2515,
        2552
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "940": {
      "op": "POP"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2768,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "944": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2768,
        2782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "945": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2754,
        2764
      ],
      "op": "CALLER",
      "path": "0"
    },
    "946": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "948": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "953": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "955": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "956": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "958": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "959": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "960": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "961": {
      "branch": 34,
      "fn": "ETHPool.withdraw",
      "offset": [
        2738,
        2782
      ],
      "op": "LT",
      "path": "0"
    },
    "962": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2735,
        2890
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "963": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2735,
        2890
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F3"
    },
    "966": {
      "branch": 34,
      "fn": "ETHPool.withdraw",
      "offset": [
        2735,
        2890
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "967": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2823,
        2833
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "968": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "970": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "971": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "972": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "973": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "975": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "977": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "978": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "980": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "981": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "982": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2807,
        2834
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "983": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "986": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "DUP3",
      "path": "0"
    },
    "988": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "991": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        2797,
        2834
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2864,
        2874
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "994": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2878,
        2879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "996": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "998": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "999": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1001": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1003": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1004": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1006": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1007": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2875
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1008": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2848,
        2879
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2797,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2735,
        2890
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2922,
        2928
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "1013": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1015": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1017": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1018": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1019": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1020": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "1023": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1024": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1025": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1028": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        2899,
        2928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1029": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1030": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1031": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1032": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2899,
        2928
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1033": {
      "op": "POP"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3072,
        3082
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1036": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1038": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1039": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1043": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1045": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1046": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1047": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1048": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1050": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1051": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1052": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1053": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3056,
        3083
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1054": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1056": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1057": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1058": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1059": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1060": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1061": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1062": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3053
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1063": {
      "branch": 35,
      "fn": "ETHPool.withdraw",
      "offset": [
        3020,
        3083
      ],
      "op": "GT",
      "path": "0"
    },
    "1064": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3017,
        3328
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1065": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3017,
        3328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x485"
    },
    "1068": {
      "branch": 35,
      "fn": "ETHPool.withdraw",
      "offset": [
        3017,
        3328
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1069": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3229,
        3239
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "1070": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1072": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1074": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1075": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1077": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1079": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1080": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1081": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1082": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1084": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1085": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1086": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1087": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1088": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1090": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1091": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1092": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1093": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1094": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1095": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1096": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3161
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1097": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "1100": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1101": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3213,
        3240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1102": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1105": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        3128,
        3240
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1106": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3128,
        3240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1107": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1109": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1111": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1112": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1113": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1114": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x463"
    },
    "1117": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1118": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1119": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1122": {
      "fn": "ETHPool.withdraw",
      "jump": "i",
      "offset": [
        3098,
        3240
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1123": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1124": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1125": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1126": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3098,
        3240
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3306,
        3316
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "1130": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1132": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1133": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1134": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1135": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1137": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1139": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1140": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1141": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1142": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1144": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1145": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1146": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1147": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3290,
        3317
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1148": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1150": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1152": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1154": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1155": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3287
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1156": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3254,
        3317
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1157": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3017,
        3328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1158": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "1160": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1161": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3354,
        3364
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1162": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3354,
        3364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1163": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1164": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1165": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "1168": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "MUL",
      "path": "0"
    },
    "1169": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1170": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3375,
        3381
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1171": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3375,
        3381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1172": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1174": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1175": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3375,
        3381
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1178": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3354,
        3364
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1179": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1180": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "CALL",
      "path": "0"
    },
    "1181": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1182": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "POP",
      "path": "0"
    },
    "1183": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "POP",
      "path": "0"
    },
    "1184": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "POP",
      "path": "0"
    },
    "1185": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "POP",
      "path": "0"
    },
    "1186": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1187": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1188": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1189": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1192": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1193": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1194": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1196": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1197": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1198": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1199": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1201": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1202": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3346,
        3382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1206": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1207": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1208": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3444,
        3454
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1209": {
      "op": "DUP2"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "op": "DUP2"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "DUP4"
    },
    "1216": {
      "op": "SWAP1"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "1251": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1255": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1256": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1257": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1258": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "SUB",
      "path": "0"
    },
    "1259": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "ETHPool.withdraw",
      "offset": [
        3435,
        3463
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1261": {
      "fn": "ETHPool.withdraw",
      "offset": [
        2286,
        3470
      ],
      "op": "POP",
      "path": "0"
    },
    "1262": {
      "fn": "ETHPool.withdraw",
      "jump": "o",
      "offset": [
        2286,
        3470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1266": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1267": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1268": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1269": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1270": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "LT",
      "path": "0"
    },
    "1271": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FF"
    },
    "1274": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1275": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1277": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1278": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1279": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1280": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1282": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1283": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1284": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1285": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1287": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1288": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1289": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1290": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "ADD",
      "path": "0"
    },
    "1291": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1298": {
      "op": "SHL"
    },
    "1299": {
      "op": "SUB"
    },
    "1300": {
      "offset": [
        482,
        512
      ],
      "op": "AND",
      "path": "0"
    },
    "1301": {
      "fn": "ETHPool.withdraw",
      "offset": [
        482,
        512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "offset": [
        482,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1304": {
      "fn": "ETHPool.withdraw",
      "jump": "o",
      "offset": [
        482,
        512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "offset": [
        843,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1308": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        843,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "offset": [
        843,
        853
      ],
      "op": "AND",
      "path": "0"
    },
    "1318": {
      "offset": [
        829,
        839
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1319": {
      "offset": [
        829,
        853
      ],
      "op": "EQ",
      "path": "0"
    },
    "1320": {
      "offset": [
        821,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x530"
    },
    "1323": {
      "offset": [
        821,
        854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1324": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1326": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1327": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1328": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        821,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "AND",
      "path": "0",
      "statement": 12
    },
    "1338": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1340": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1341": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1342": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1343": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1345": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1347": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1348": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1350": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1351": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1187
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1352": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1353": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1356": {
      "op": "NOT"
    },
    "1357": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "AND",
      "path": "0"
    },
    "1358": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1190,
        1194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1360": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "OR",
      "path": "0"
    },
    "1361": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1362": {
      "fn": "ETHPool.addTeamMember",
      "offset": [
        1173,
        1194
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1363": {
      "fn": "ETHPool.addTeamMember",
      "jump": "o",
      "offset": [
        1103,
        1201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1364": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3739,
        5178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1365": {
      "offset": [
        923,
        933
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1366": {
      "offset": [
        916,
        934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1368": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1369": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1370": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1371": {
      "offset": [
        916,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1373": {
      "offset": [
        916,
        934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1375": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1376": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1378": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1380": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1381": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1383": {
      "branch": 36,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        916,
        934
      ],
      "op": "AND",
      "path": "0"
    },
    "1384": {
      "offset": [
        908,
        935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x570"
    },
    "1387": {
      "branch": 36,
      "offset": [
        908,
        935
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1388": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        908,
        935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1390": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        908,
        935
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1391": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        908,
        935
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1392": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        908,
        935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1393": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3874,
        3900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1395": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3874,
        3900
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1396": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3841,
        3850
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1397": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3841,
        3850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1398": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3811,
        3838
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1400": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3931,
        3936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1403": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3931,
        3943
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1404": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3927,
        3943
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3927,
        3943
      ],
      "op": "LT",
      "path": "0"
    },
    "1406": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1407": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x787"
    },
    "1410": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1411": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3999,
        4019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1413": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1415": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4028,
        4029
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1416": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1419": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "LT",
      "path": "0"
    },
    "1420": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x597"
    },
    "1423": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1424": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x597"
    },
    "1427": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "1430": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4022,
        4030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1431": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1432": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1434": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1436": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1437": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1439": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1440": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1441": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1442": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1443": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1444": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "ADD",
      "path": "0"
    },
    "1445": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "AND",
      "path": "0"
    },
    "1455": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1456": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1457": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1458": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1460": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1461": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1462": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1463": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1465": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1466": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1467": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4068
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1468": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1469": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1472": {
      "branch": 37,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4047,
        4073
      ],
      "op": "SUB",
      "path": "0"
    },
    "1473": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4044,
        4370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "1476": {
      "branch": 37,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4044,
        4370
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1477": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x6"
    },
    "1479": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4122
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1480": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1481": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "1484": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1485": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4123,
        4124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1487": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4123,
        4124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1488": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1491": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4110,
        4124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1492": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4110,
        4124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1493": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1494": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1495": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1496": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "LT",
      "path": "0"
    },
    "1497": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E4"
    },
    "1500": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1501": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E4"
    },
    "1504": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "1507": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4104,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1508": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1509": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1511": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1512": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1513": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1514": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1516": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1517": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1518": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1519": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "ADD",
      "path": "0"
    },
    "1520": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1521": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1523": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1524": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1535": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "AND",
      "path": "0"
    },
    "1536": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4104,
        4125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1537": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4099,
        4100
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1538": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4099,
        4100
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1539": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1540": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "LT",
      "path": "0"
    },
    "1541": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x610"
    },
    "1544": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1545": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x610"
    },
    "1548": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "1551": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4093,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1552": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1553": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1555": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1556": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1557": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1558": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1560": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1561": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1562": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1563": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4101
      ],
      "op": "ADD",
      "path": "0"
    },
    "1564": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1565": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "op": "NOT"
    },
    "1575": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "AND",
      "path": "0"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "op": "SUB"
    },
    "1584": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1585": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1586": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1587": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "AND",
      "path": "0"
    },
    "1588": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1589": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1590": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1591": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "OR",
      "path": "0"
    },
    "1592": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4093,
        4125
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1594": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4155
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x6"
    },
    "1596": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4168
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1597": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4168
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1598": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x649"
    },
    "1601": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1604": {
      "op": "SWAP1"
    },
    "1605": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1608": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4156,
        4170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1609": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4156,
        4170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1610": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1611": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1612": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1613": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "LT",
      "path": "0"
    },
    "1614": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "1617": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1618": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "1621": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "1624": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4150,
        4171
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1625": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1626": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1628": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1629": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1630": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1631": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1633": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1634": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1635": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1636": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4150,
        4171
      ],
      "op": "ADD",
      "path": "0"
    },
    "1637": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1638": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "op": "NOT"
    },
    "1648": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "AND",
      "path": "0"
    },
    "1649": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1650": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1651": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1653": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x681"
    },
    "1657": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1658": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1660": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4143,
        4171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1661": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "1664": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4225,
        4239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1665": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4225,
        4239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1666": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4220,
        4221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1667": {
      "branch": 38,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4220,
        4239
      ],
      "op": "EQ",
      "path": "0"
    },
    "1668": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4217,
        4333
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x695"
    },
    "1671": {
      "branch": 38,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4217,
        4333
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1672": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "1673": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x691"
    },
    "1676": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1677": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "1680": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4311,
        4314
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1681": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1682": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1683": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "POP",
      "path": "0"
    },
    "1684": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4311,
        4314
      ],
      "op": "POP",
      "path": "0"
    },
    "1685": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4217,
        4333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1686": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4350,
        4355
      ],
      "op": "POP",
      "path": "0",
      "statement": 16
    },
    "1687": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4350,
        4355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x787"
    },
    "1690": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4350,
        4355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1691": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4044,
        4370
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4466,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1694": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4466,
        4492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1695": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4383,
        4397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1697": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4383,
        4397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1698": {
      "branch": 39,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4466,
        4496
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1699": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "1702": {
      "branch": 39,
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1703": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4610,
        4636
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x4"
    },
    "1705": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4610,
        4636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1715": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "AND",
      "path": "0"
    },
    "1716": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1718": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1719": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1720": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1723": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1725": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1726": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1728": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1730": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4553
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CD"
    },
    "1734": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4556,
        4575
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1736": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4556,
        4575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "1740": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4526,
        4575
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1741": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4526,
        4575
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1742": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4525,
        4636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D7"
    },
    "1745": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4525,
        4636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1746": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4525,
        4636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1747": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4525,
        4636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA05"
    },
    "1750": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4525,
        4636
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1751": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4525,
        4636
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1752": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4516,
        4636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4516,
        4636
      ],
      "op": "POP",
      "path": "0"
    },
    "1754": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x712"
    },
    "1757": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1758": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1759": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4913,
        4932
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x3"
    },
    "1761": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4913,
        4932
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1771": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "AND",
      "path": "0"
    },
    "1772": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1774": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1775": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1776": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1777": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1779": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1781": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1782": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1784": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1785": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1786": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1787": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x705"
    },
    "1790": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1791": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4859,
        4878
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1792": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4859,
        4878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "1796": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4835,
        4878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1797": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4835,
        4878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1798": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4834,
        4932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "1801": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4834,
        4932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1802": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4834,
        4932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4834,
        4932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA05"
    },
    "1806": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4834,
        4932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1807": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4834,
        4932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4825,
        4932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1809": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4825,
        4932
      ],
      "op": "POP",
      "path": "0"
    },
    "1810": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4463,
        4948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "SUB"
    },
    "1819": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 19
    },
    "1820": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "AND",
      "path": "0"
    },
    "1821": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1823": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1824": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1825": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1826": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1828": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1830": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1831": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1833": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1834": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1835": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1836": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1837": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4999,
        5005
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1838": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4999,
        5005
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1839": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        4995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1840": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73A"
    },
    "1843": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1844": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4999,
        5005
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1845": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4999,
        5005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1846": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "1849": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        4974,
        5005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1850": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1851": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1852": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1853": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        4974,
        5005
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1865": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "AND",
      "path": "0"
    },
    "1866": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1868": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1871": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1873": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1875": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1876": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1877": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1878": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1880": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1881": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1882": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1883": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5049,
        5070
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1884": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1886": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1887": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1888": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1889": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1891": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5046
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1892": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1893": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1894": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5019,
        5070
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1895": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x770"
    },
    "1898": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1899": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1900": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "1903": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        5084,
        5118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1904": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1905": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1906": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5084,
        5118
      ],
      "op": "POP",
      "path": "0"
    },
    "1907": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3950,
        5129
      ],
      "op": "POP",
      "path": "0"
    },
    "1908": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3950,
        5129
      ],
      "op": "POP",
      "path": "0"
    },
    "1909": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "1910": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1911": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "1914": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1915": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA27"
    },
    "1918": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "i",
      "offset": [
        3945,
        3948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1919": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1920": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1921": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1922": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3945,
        3948
      ],
      "op": "POP",
      "path": "0"
    },
    "1923": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1926": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1927": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        3910,
        5129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5138,
        5164
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x4"
    },
    "1931": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "offset": [
        5138,
        5170
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "fn": "ETHPool.depositAndDestriputeRewards",
      "jump": "o",
      "offset": [
        3739,
        5178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1934": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1935": {
      "offset": [
        843,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1937": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        843,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "offset": [
        843,
        853
      ],
      "op": "AND",
      "path": "0"
    },
    "1947": {
      "offset": [
        829,
        839
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1948": {
      "offset": [
        829,
        853
      ],
      "op": "EQ",
      "path": "0"
    },
    "1949": {
      "offset": [
        821,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1952": {
      "offset": [
        821,
        854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1953": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        821,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1955": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        821,
        854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1956": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        821,
        854
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1957": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        821,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1574,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x7"
    },
    "1960": {
      "fn": "ETHPool.setMinBalance",
      "offset": [
        1574,
        1606
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1961": {
      "fn": "ETHPool.setMinBalance",
      "jump": "o",
      "offset": [
        1495,
        1613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1962": {
      "fn": "ETHPool.deposit",
      "offset": [
        1649,
        2211
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1963": {
      "fn": "ETHPool.deposit",
      "offset": [
        1712,
        1713
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "1965": {
      "fn": "ETHPool.deposit",
      "offset": [
        1700,
        1709
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1966": {
      "branch": 40,
      "fn": "ETHPool.deposit",
      "offset": [
        1700,
        1713
      ],
      "op": "GT",
      "path": "0"
    },
    "1967": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F1"
    },
    "1970": {
      "branch": 40,
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1971": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1973": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1982": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1987": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1988": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "ADD",
      "path": "0"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH20",
      "value": "0x4E6F20457468657220746F206465706F73697421"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2023": {
      "op": "DUP3"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "2032": {
      "op": "JUMP"
    },
    "2033": {
      "fn": "ETHPool.deposit",
      "offset": [
        1692,
        1738
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2034": {
      "fn": "ETHPool.deposit",
      "offset": [
        1776,
        1786
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2035": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2037": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2038": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2039": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2040": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2042": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2044": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2045": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2047": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2048": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2049": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2050": {
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2051": {
      "branch": 41,
      "fn": "ETHPool.deposit",
      "offset": [
        1760,
        1792
      ],
      "op": "SUB",
      "path": "0"
    },
    "2052": {
      "fn": "ETHPool.deposit",
      "offset": [
        1757,
        2007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B4"
    },
    "2055": {
      "branch": 41,
      "fn": "ETHPool.deposit",
      "offset": [
        1757,
        2007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2056": {
      "fn": "ETHPool.deposit",
      "offset": [
        1858,
        1872
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x7"
    },
    "2058": {
      "fn": "ETHPool.deposit",
      "offset": [
        1858,
        1872
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2059": {
      "fn": "ETHPool.deposit",
      "offset": [
        1846,
        1855
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2060": {
      "branch": 42,
      "fn": "ETHPool.deposit",
      "offset": [
        1846,
        1872
      ],
      "op": "GT",
      "path": "0"
    },
    "2061": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x871"
    },
    "2064": {
      "branch": 42,
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2065": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2067": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2076": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2079": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2081": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2082": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "ADD",
      "path": "0"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2088": {
      "op": "DUP3"
    },
    "2089": {
      "op": "ADD"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH32",
      "value": "0x4465706F73697420616D6F756E74206973206C65737320746861742074686520"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "ADD"
    },
    "2128": {
      "op": "MSTORE"
    },
    "2129": {
      "op": "PUSH16",
      "value": "0x36B4B734B6BAB69030B63637BBB2B217"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "2160": {
      "op": "JUMP"
    },
    "2161": {
      "fn": "ETHPool.deposit",
      "offset": [
        1838,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2162": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1944
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x6"
    },
    "2164": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2165": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2166": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2168": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2169": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "ADD",
      "path": "0"
    },
    "2170": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2171": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2174": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2175": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2176": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2177": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2178": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2211": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "ADD",
      "path": "0"
    },
    "2212": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2213": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "op": "NOT"
    },
    "2223": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "AND",
      "path": "0"
    },
    "2224": {
      "fn": "ETHPool.deposit",
      "offset": [
        1958,
        1968
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2225": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "OR",
      "path": "0"
    },
    "2226": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2227": {
      "fn": "ETHPool.deposit",
      "offset": [
        1939,
        1970
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2228": {
      "fn": "ETHPool.deposit",
      "offset": [
        1757,
        2007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2229": {
      "fn": "ETHPool.deposit",
      "offset": [
        2032,
        2042
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 28
    },
    "2230": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2232": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2235": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2237": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2239": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2242": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2243": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2244": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2245": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2246": {
      "fn": "ETHPool.deposit",
      "offset": [
        2047,
        2056
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2247": {
      "fn": "ETHPool.deposit",
      "offset": [
        2047,
        2056
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2248": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2043
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2249": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D3"
    },
    "2252": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2253": {
      "fn": "ETHPool.deposit",
      "offset": [
        2047,
        2056
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2254": {
      "fn": "ETHPool.deposit",
      "offset": [
        2047,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2255": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "2258": {
      "fn": "ETHPool.deposit",
      "jump": "i",
      "offset": [
        2016,
        2056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2259": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2260": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2261": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "POP",
      "path": "0"
    },
    "2262": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "POP",
      "path": "0"
    },
    "2263": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2264": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2265": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2266": {
      "fn": "ETHPool.deposit",
      "offset": [
        2016,
        2056
      ],
      "op": "POP",
      "path": "0"
    },
    "2267": {
      "fn": "ETHPool.deposit",
      "offset": [
        2115,
        2124
      ],
      "op": "CALLVALUE",
      "path": "0",
      "statement": 29
    },
    "2268": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2270": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2272": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2273": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2274": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2275": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "2278": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2279": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2280": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "2283": {
      "fn": "ETHPool.deposit",
      "jump": "i",
      "offset": [
        2092,
        2124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2284": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2285": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2286": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2287": {
      "fn": "ETHPool.deposit",
      "offset": [
        2092,
        2124
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "2292": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2293": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2294": {
      "fn": "ETHPool.deposit",
      "offset": [
        2182,
        2192
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "fn": "ETHPool.deposit",
      "offset": [
        2194,
        2203
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2300": {
      "op": "DUP3"
    },
    "2301": {
      "op": "ADD"
    },
    "2302": {
      "op": "MSTORE"
    },
    "2303": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
    },
    "2336": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2340": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2341": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2342": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2343": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "SUB",
      "path": "0"
    },
    "2344": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2345": {
      "fn": "ETHPool.deposit",
      "offset": [
        2174,
        2204
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2346": {
      "fn": "ETHPool.deposit",
      "jump": "o",
      "offset": [
        1649,
        2211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2347": {
      "op": "JUMPDEST"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2352": {
      "op": "DUP3"
    },
    "2353": {
      "op": "DUP5"
    },
    "2354": {
      "op": "SUB"
    },
    "2355": {
      "op": "SLT"
    },
    "2356": {
      "op": "ISZERO"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x93D"
    },
    "2360": {
      "op": "JUMPI"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2363": {
      "op": "DUP1"
    },
    "2364": {
      "op": "REVERT"
    },
    "2365": {
      "op": "JUMPDEST"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "CALLDATALOAD"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "op": "DUP2"
    },
    "2377": {
      "op": "AND"
    },
    "2378": {
      "op": "DUP2"
    },
    "2379": {
      "op": "EQ"
    },
    "2380": {
      "op": "PUSH2",
      "value": "0x954"
    },
    "2383": {
      "op": "JUMPI"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2386": {
      "op": "DUP1"
    },
    "2387": {
      "op": "REVERT"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "SWAP4"
    },
    "2390": {
      "op": "SWAP3"
    },
    "2391": {
      "op": "POP"
    },
    "2392": {
      "op": "POP"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "jump": "o",
      "op": "JUMP"
    },
    "2395": {
      "op": "JUMPDEST"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "op": "DUP3"
    },
    "2401": {
      "op": "DUP5"
    },
    "2402": {
      "op": "SUB"
    },
    "2403": {
      "op": "SLT"
    },
    "2404": {
      "op": "ISZERO"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2408": {
      "op": "JUMPI"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2411": {
      "op": "DUP1"
    },
    "2412": {
      "op": "REVERT"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "op": "POP"
    },
    "2415": {
      "op": "CALLDATALOAD"
    },
    "2416": {
      "op": "SWAP2"
    },
    "2417": {
      "op": "SWAP1"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "jump": "o",
      "op": "JUMP"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2441": {
      "op": "REVERT"
    },
    "2442": {
      "op": "JUMPDEST"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2445": {
      "op": "DUP3"
    },
    "2446": {
      "op": "DUP3"
    },
    "2447": {
      "op": "LT"
    },
    "2448": {
      "op": "ISZERO"
    },
    "2449": {
      "op": "PUSH2",
      "value": "0x99C"
    },
    "2452": {
      "op": "JUMPI"
    },
    "2453": {
      "op": "PUSH2",
      "value": "0x99C"
    },
    "2456": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2459": {
      "jump": "i",
      "op": "JUMP"
    },
    "2460": {
      "op": "JUMPDEST"
    },
    "2461": {
      "op": "POP"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "op": "SWAP1"
    },
    "2464": {
      "jump": "o",
      "op": "JUMP"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2468": {
      "op": "DUP3"
    },
    "2469": {
      "op": "NOT"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "GT"
    },
    "2472": {
      "op": "ISZERO"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x9B4"
    },
    "2476": {
      "op": "JUMPI"
    },
    "2477": {
      "op": "PUSH2",
      "value": "0x9B4"
    },
    "2480": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2483": {
      "jump": "i",
      "op": "JUMP"
    },
    "2484": {
      "op": "JUMPDEST"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "ADD"
    },
    "2487": {
      "op": "SWAP1"
    },
    "2488": {
      "jump": "o",
      "op": "JUMP"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2505": {
      "op": "MSTORE"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2510": {
      "op": "REVERT"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2514": {
      "op": "DUP2"
    },
    "2515": {
      "op": "PUSH2",
      "value": "0x9DE"
    },
    "2518": {
      "op": "JUMPI"
    },
    "2519": {
      "op": "PUSH2",
      "value": "0x9DE"
    },
    "2522": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2525": {
      "jump": "i",
      "op": "JUMP"
    },
    "2526": {
      "op": "JUMPDEST"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2530": {
      "op": "NOT"
    },
    "2531": {
      "op": "ADD"
    },
    "2532": {
      "op": "SWAP1"
    },
    "2533": {
      "jump": "o",
      "op": "JUMP"
    },
    "2534": {
      "op": "JUMPDEST"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "DUP2"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2540": {
      "op": "NOT"
    },
    "2541": {
      "op": "DIV"
    },
    "2542": {
      "op": "DUP4"
    },
    "2543": {
      "op": "GT"
    },
    "2544": {
      "op": "DUP3"
    },
    "2545": {
      "op": "ISZERO"
    },
    "2546": {
      "op": "ISZERO"
    },
    "2547": {
      "op": "AND"
    },
    "2548": {
      "op": "ISZERO"
    },
    "2549": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "2552": {
      "op": "JUMPI"
    },
    "2553": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "2556": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2559": {
      "jump": "i",
      "op": "JUMP"
    },
    "2560": {
      "op": "JUMPDEST"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "MUL"
    },
    "2563": {
      "op": "SWAP1"
    },
    "2564": {
      "jump": "o",
      "op": "JUMP"
    },
    "2565": {
      "op": "JUMPDEST"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2568": {
      "op": "DUP3"
    },
    "2569": {
      "op": "PUSH2",
      "value": "0xA22"
    },
    "2572": {
      "op": "JUMPI"
    },
    "2573": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2593": {
      "op": "REVERT"
    },
    "2594": {
      "op": "JUMPDEST"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "DIV"
    },
    "2597": {
      "op": "SWAP1"
    },
    "2598": {
      "jump": "o",
      "op": "JUMP"
    },
    "2599": {
      "op": "JUMPDEST"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "DUP3"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2609": {
      "op": "JUMPI"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2616": {
      "jump": "i",
      "op": "JUMP"
    },
    "2617": {
      "op": "JUMPDEST"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "op": "SWAP1"
    },
    "2623": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "be09d995d4e2daeade5f2f7d72a25943630aff86",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/// @title ETHPool provides a service where people can deposit ETH and they will receive weekly rewards.\n/// @author Sherif Abdelmoatty\ncontract ETHPool{\n    address public governance;  \n    mapping(address => uint256) public depositBalances;\n    mapping(address => uint256) lockedDepositBalances;\n    uint256 public totalDepositBalance;\n    uint256 totalLockedDepositBalances;\n    mapping(address => bool) public isTeam;\n    address payable[] public users;\n\n    uint256 public minimumBalance; //minimum allowd balance, to minimize the number\n                                    //of accounts with small balances to save gas \n\n    event Deposit(address user,uint256 amount);\n    event Withdraw(address user,uint256 amount);\n\n    modifier onlyGovernance() {\n        require(msg.sender == governance);\n        _;\n    }\n\n    modifier onlyTeam() {\n        require(isTeam[msg.sender]);\n        _;\n    }\n\n    constructor(){\n        governance = msg.sender;\n    }\n\n    /// @notice Add team member\n    /// @param member The member address to be added\n    function addTeamMember(address member) public onlyGovernance{\n        isTeam[member] = true;\n    }\n\n    /// @notice Remove team member\n    /// @param member The member address to be removed\n    function removeTeamMember(address member) public onlyGovernance{\n        require(isTeam[member], \"Not a team member!\");\n        isTeam[member] = false;\n    }\n\n    /// @notice Set minimumBalance\n    function setMinBalance(uint256 _minimumBalance) public onlyGovernance{\n        minimumBalance = _minimumBalance;\n    }\n\n    /// @notice deposit ether\n    function deposit() public payable{\n        require(msg.value > 0, \"No Ether to deposit!\");\n        \n        if(depositBalances[msg.sender] == 0){ //user isn't in the users list\n            require(msg.value > minimumBalance, \"Deposit amount is less that the minimum allowed.\");\n            users.push(payable(msg.sender)); // add user to users list\n        }\n        depositBalances[msg.sender] += msg.value; //update the user balance\n        totalDepositBalance += msg.value; //update the total deposit balance\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    /// @notice withdraw ether\n    /// @param amount to be withdrawn\n    function withdraw(uint256 amount) public payable{\n        require(amount > 0, \"Amount must be higher than 0.\");\n        require(depositBalances[msg.sender] > amount,\n             \"No suffecient funds in user balance.\");\n\n        depositBalances[msg.sender] -= amount; //update the user balance\n\n        //if remaining balance less than minimumBalance, add the remaining\n        //balance to the withdraw amount and set the user balance to 0\n        if(depositBalances[msg.sender] < minimumBalance){\n            amount += depositBalances[msg.sender];\n            depositBalances[msg.sender] = 0;\n        }\n        totalDepositBalance -= amount; //update the total deposit balance\n\n        //update the locked balance values\n        if(lockedDepositBalances[msg.sender] > depositBalances[msg.sender]){\n            totalLockedDepositBalances -= lockedDepositBalances[msg.sender] \n                                                - depositBalances[msg.sender];\n            lockedDepositBalances[msg.sender] = depositBalances[msg.sender];\n        }\n        \n        payable(msg.sender).transfer(amount); //transfer amount to the user account\n        emit Withdraw(msg.sender, amount);\n    }\n\n    /// @notice any team member can deposit rewards using this function\n    /// @notice and it will distribute the rewards based on the locked balances\n    /// @dev the looking period(weekly) depends on how often the team members calls\n    /// @dev this function\n    function depositAndDestriputeRewards() public payable onlyTeam{\n        uint256 totalRewardsBalance = msg.value;\n        uint256 tlb = totalLockedDepositBalances;\n        for (uint n = 0; n < users.length; n++) { //distribute rewards for each user\n            address payable user = users[n];\n            if(depositBalances[user] == 0){ \n                users[n] = users[users.length-1];\n                delete users[users.length-1]; // remove user if balance 0\n                if(n != users.length-1){ //check if last element to prevent infinite loop\n                    n--;\n                }\n                break;\n            }\n            uint256 reward;\n            //check if there is any balances looked\n            if(totalLockedDepositBalances > 0){ \n                reward = (lockedDepositBalances[user] * totalRewardsBalance)/\n                                totalLockedDepositBalances ;\n            }else{\n                //this can happen in the first rewards deposit\n                //or if every user removed all there balances during the locking period\n                reward = (depositBalances[user] * totalRewardsBalance)/\n                                totalDepositBalance ;\n            }\n            \n            depositBalances[user] += reward;\n            lockedDepositBalances[user] = depositBalances[user];\n            tlb += lockedDepositBalances[user];\n        }\n        totalLockedDepositBalances = tlb;\n\n    }\n\n}",
  "sourceMap": "192:4989:0:-:0;;;959:53;;;;;;;;;-1:-1:-1;982:10:0;:23;;-1:-1:-1;;;;;;982:23:0;995:10;982:23;;;192:4989;;;;;;",
  "sourcePath": "contracts/ETHPool.sol",
  "type": "contract"
}